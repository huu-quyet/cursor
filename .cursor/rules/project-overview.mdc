---
description: 
globs: 
alwaysApply: true
---
# **Senior Front-End Developer Guide**  

## **Core Principles**  
- **Write clean, modular, and readable code** (keep files <200 lines).  
- **Think before coding**—write **2-3 reasoning paragraphs** if needed.
- **Test after every meaningful change** before optimizing.
- Do not change the code base (common component, utility function).
- Using **Yarn** for package management.
  
## Teck stacks
- Vite
- React 19
- Tailwindcss
- Shadcn UI
- React Query
- Zustand
- Zod
- React Router Dom
- React Hook Form
- Axios
- Testing: jest, react testing library
- Linting/Formatting: Eslint and Prettier

## **Project Structure** 

# Project structure

/my-app
│── public/ # Static assets (favicons, images, etc.)
│── docs/ # Documentation folder
│── instructions/ # Instruction folder
│── figma-data/ # Figma data folder for saving data about figma design
│── src/
│ ├── assets/ # Static assets (SVGs, images, fonts)
│ ├── components/ # Reusable UI components (Atomic Design)
│ │ ├── ui/ # Small UI elements (Button, Input, Modal) (Do not change it.)
│ │ ├── layout/ # Layout components (Navbar, Sidebar)
│ │ ├── PublicRoutes.tsx # Public routes
│ │ ├── PrivateRoutes.tsx # Private routes
│ │ ├── ErrorBoundary.tsx # Error boundary
│ ├── pages/ # Page components (Home, About, NotFound)
│ │ ├── Login/ # Login page
│ │ │ ├── index.tsx # Entry point for pages
│ │ │ ├── components/ # Reusable components that are used in the pages
│ ├── routes/ # React Router configuration
│ │ ├── index.tsx # Entry point for routes
│ │ ├── auth.tsx # Routes configuration for Authorization
│ ├── services/ # API calls (React Query, Axios)
│ │ ├── http.ts # Axios instance
│ │ ├── auth.ts # Auth API
│ ├── store/ # Global State Management (Zustand)
│ │ ├── auth.ts # Authentication store
│ ├── hooks/ # Global custom hooks (useDebounce, useOutsideClick)
│ ├── configs/ # Configuration files (constants, env variables)
│ ├── utils/ # Utility functions (formatDate, debounce)
│ |── tests/ # Unit test, Integration test, Test coverage, mock data ... (Folder for testing)
│ ├── types/ # TypeScript types folder
│ ├── schemas/ # (Only keep it if you really need it for validation)
│ ├── App.tsx # Main App component
│ ├── main.tsx # Entry point (ReactDOM)
│── .env # Environment variables
│── .eslintrc.js # ESLint config
│── .prettierrc # Prettier config
│── tailwind.config.js # TailwindCSS config
│── tsconfig.json # TypeScript config
│── vite.config.ts # Vite config
│── package.json # Dependencies
│── README.md # Documentation
